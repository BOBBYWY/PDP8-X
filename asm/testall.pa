/ ---------------------------------------------------------------------------
/ PDP-8 instruction tester for the PDP-8/X project
/ ---------------------------------------------------------------------------
/
/ https://github.com/SmallRoomLabs/PDP8-X
/
/ Start address: 00000
/
/ The software will test one intruction type and mode at a time (as long as 
/ it is possible). For each run the AC (accumulator) will be set to the 
/ current step-number (staring with 1) and then halt. Pressing the 
/ cont/execute/run -switch again will actually perform that particular test.
/
/ Every test checks for correctness and if correct it will jump to the next 
/ test. 
/
/ If an error occurred the code jumps to address 7770 where it will loop 
/ forever.
/
/ When all tests are successfully done the code jumps to 5250 where it 
/ loops forever.
/
/ The Error address is   111 111 111 000 in binary
/ The Success address is 101 010 101 000 in binary
/
/ Those addresses are choosen to have an easy-to-reconize pattern. (Due to
/ the loop back the last one or two LED will flicker a bit.)
/
/
/ Init:   JMP 0P->0P (requires working CLA, DCA 0P) 
/ Tst001: JMP 0P->xP (requires working ISZ 0P, TAD 0P, HLT)
/ Tst002: JMP xP->xP
/ Tst003: JMP xP->0P
/
/       0->0{0}   0->0{x}   0->x{0}   0->x{x}   x->0{0}   x->0{x}   x->x{0}   x->x{x}
/       Tst010    N/A       Tst004    N/A       Tst011    Tst007    Tst005    Tst006 
/
/ Tst004: INDIRECT JMP from 0P to xP using vector in 0P (VTo05)
/ Tst005: INDIRECT JMP from xP to xP using vector in 0P (VTo06)
/ Tst006: INDIRECT JMP from xP to xP via vector in xP (VTo07)
/ Tst007: INDIRECT JMP from xP to 0P via vector in xP (VTo10)
/ Tst010: INDIRECT JMP from 0P to 0P via vector in 0P (VTo11)
/ Tst011: INDIRECT JMP from xP to 0P via vector in 0P (VTo12)
/ 
/ Tst012: AUTOINDEX JMP from 0P to xP using vector in 0P (AVTo13)
/ Tst013: AUTOINDEX JMP from xP to xP using vector in 0P (AVTo14)
/ Tst014: AUTOINDEX JMP from xP to 0P via vector in 0P (AVTo15)
/ Tst015: AUTOINDEX JMP from 0P to 0P via vector in 0P (AVTo16)
/
/
/
/
/
/ ---------------------------------------------------------------------------
/
/ Copyright (c) 2019 Mats Engstrom/SmallRoomLabs
/
/ Permission is hereby granted, free of charge, to any person obtaining a copy
/ of this software and associated documentation files (the "Software"), to deal
/ in the Software without restriction, including without limitation the rights
/ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/ copies of the Software, and to permit persons to whom the Software is
/ furnished to do so, subject to the following conditions:
/
/ The above copyright notice and this permission notice shall be included in all
/ copies or substantial portions of the Software.
/
/ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
/ SOFTWARE.
/ ---------------------------------------------------------------------------


/*************************************************************************
/*************************************************************************
/*************************************************************************
*0

/
/
/
    JMP Init
    HLT


/
/ Normal variables used for testing
/
Cnt, 5555           / Step counter - shown in AC at each step
Inc, 5555           / Testing of ISZ


/*************************************************************************
/*************************************************************************
/*************************************************************************
*10

/
/ Auto-index vectors and variables
/ Note: These vectors are pre-incremented and thus needs to be
/       set to 1 location before their intended target.
AVTo13, Tst013-1
AVTo14, Tst014-1
AVTo15, Tst015-1
AVTo16, Tst016-1

/VAInc, Inc-1


/*************************************************************************
/*************************************************************************
/*************************************************************************
*20
/
/ Zero Page - Indirect vectors and variables 
/
VTo05, Tst005
VTo06, Tst006
VTo11, Tst011
VTo12, Tst012
/VInc, Inc


/*************************************************************************
/*************************************************************************
/*************************************************************************
*30

/
/ Initialize variables and vectors
/ Tests JMP within zero page
/
   JMP ERROR
Init,
    CLA                     / Initialize Cnt to 0
    DCA Cnt                
    CLA                     / Initialize Inc to 1234
    TAD (7777)
    DCA Inc    
/    CLA; TAD (Inc); DCA VInc    / Initialize VInc to point to Inc
/    CLA; TAD (Inc-1); DCA VAInc / Initialize VAInc to point to one address before Inc
    JMP Tst001

/
/ Test JMP from zero page to normal page
/
   JMP ERROR
Tst001,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0001
    JMP Tst002
    JMP ERROR

/
/ Tst004: INDIRECT JMP from 0P to xP using vector in 0P (VTo05)
/
   JMP ERROR
Tst004,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0004
    NOP
    JMP I VTo05
    JMP ERROR


/
/ Tst010: INDIRECT JMP from 0P to 0P via vector in 0P (VTo11)
/
   JMP ERROR
Tst010,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0010
    NOP
    JMP I VTo11
    JMP ERROR


/
/ Tst012: AUTOINDEX JMP from 0P to xP using vector in 0P (AVTo13)
/
   JMP ERROR
Tst012,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0012
    NOP
    JMP I AVTo13
    JMP ERROR

/
/ Tst015: AUTOINDEX JMP from 0P to 0P via vector in 0P (AVTo16)
/
    JMP ERROR
Tst015,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0015
    NOP
    JMP I AVTo16
    JMP ERROR



/*************************************************************************
/*************************************************************************
/*************************************************************************
*200

/
/ Nomal Page - Indirect vectors and variables 
/
VTo07, Tst007
VTo10, Tst010


/
/ Test JMP from normal page to normal page
/
   JMP ERROR
Tst002,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0002
    JMP Tst003
    JMP ERROR

/
/ Test JMP from normal page to zero page
/
   JMP ERROR
Tst003,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0003
    JMP Tst004
    JMP ERROR


/
/ Tst005: INDIRECT JMP from xP to xP using vector in 0P (VTo06)
/
   JMP ERROR
Tst005,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0005
    NOP
    JMP I VTo06
    JMP ERROR


/
/ Tst006: INDIRECT JMP from xP to xP via vector in xP (VTo07)
/
   JMP ERROR
Tst006,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0006
    NOP
    JMP I VTo07
    JMP ERROR


/
/ Tst007: INDIRECT JMP from xP to 0P via vector in xP (VTo10)
/
   JMP ERROR
Tst007,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0007
    NOP
    JMP I VTo10
    JMP ERROR

/
/ Tst011: INDIRECT JMP from xP to 0P via vector in 0P (VTo12)
/
   JMP ERROR
Tst011,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0011
    NOP
    JMP I VTo12
    JMP ERROR


/
/ Tst013: AUTOINDEX JMP from xP to xP using vector in 0P (AVTo14)
/
   JMP ERROR
Tst013,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0013
    NOP
    JMP I AVTo14
    JMP ERROR


/
/ Tst014: AUTOINDEX JMP from xP to 0P via vector in 0P (AVTo15)
/
   JMP ERROR
Tst014,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0015
    NOP
    JMP I AVTo15
    JMP ERROR



Tst016, JMP SUCCESS

/*************************************************************************
/*************************************************************************
/*************************************************************************
*5250

/
/ Display success pattern on address leds
/ 101010101xxx 
/
SUCCESS, 
    NOP             / The nop is required or some emulators will
    JMP SUCCESS     / not show the correct address on the LEDS


/*************************************************************************
/*************************************************************************
/*************************************************************************
*7700

/
/ Display error pattern on address leds
/ 111111000xxx 
/
ERROR, 
    NOP             / The nop is required or some emulators will
    JMP ERROR       / not show the correct address on the LEDS


$



/
/
/
Step4,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0005
    NOP
    JMP I V5
    JMP ERROR


/
/
/
Step5,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0006
    NOP
    JMP I V6
    JMP ERROR


/
/
/
Step11,0                 / Return address for subroutine
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0014
    NOP
    JMP I Step11
    JMP ERROR


/
/
/
Step8,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0011
    NOP
    JMS Step9
    JMS Step11
    JMS I VA12
    JMS I VA13
    JMP Step14
    JMP ERROR


/
/
/
Step12,0                 / Return address for subroutine
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0015
    NOP
    JMP I Step12
    JMP ERROR


/*************************************************************************
/*************************************************************************
/*************************************************************************
*200

/
/
/
Step1,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0002
    NOP
    JMP Step2
    JMP ERROR


/
/
/
Step10,0 // Return address
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0013
    NOP
    JMP I Step10
    JMP ERROR


/
/
/
Step9,0 // Return address
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0012
    NOP
    JMS Step10
    JMP I Step9
    JMP ERROR


/
/
/
Step2,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0003
    NOP
    JMP Step3
    JMP ERROR


/
/
/
Step6,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0007
    NOP
    JMP I VA7
    JMP ERROR


/
/
Step7,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0010
    NOP
    JMP I VA8
    JMP ERROR


/
/
/
Step13,0 / Return address
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0016
    NOP
    JMP I Step13
    JMP ERROR


/
/ Check if equal
/ At entry Cnt is 0015
/
Step14,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0017
    NOP
    CLA
    TAD (0017)  / Cnt=16 subtract 17 AC=0
    CMA IAC		/ 2's complement accumulator
	TAD	Cnt	    / add operand from memory
    SNA         / Skip if AC != 0
    JMP Step15  / AC is 0 so test correct
    JMP ERROR


/
/ Check if not equal
/ At entry Cnt is 0016
/
Step15,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0020
    NOP
    CLA
    TAD (0017)  / Cnt=20 subtract 17 AC=1
    CMA IAC		/ 2's complement accumulator
	TAD	Cnt	    / add operand from memory
    SZA         / Skip if AC == 0
    JMP Step16  / AC is 1 so test correct
    JMP ERROR


/
/ Check if equal is failing
/ At entry Cnt is 0017
/
Step16,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0021
    NOP
    CLA
    TAD (0017)  // Cnt=21 subtract 17 AC=2
    CMA IAC		/ 2's complement accumulator
	TAD	Cnt	    / add operand from memory
    SNA         / Skip if AC !=0 
    JMP Stop16  // Get here if AC == 0, then stop
    JMP Step17  // Get here if AC !=0, then continue
Stop16,
    JMP ERROR


/
/ Check if not equal
/ At entry Cnt is 0020
/
Step17,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0022
    NOP
    CLA
    TAD (0022)  / Cnt=22 subtract with 21, AC=0
    CMA IAC		/ 2's complement accumulator
	TAD	Cnt	    / add operand from memory
    SZA         / Skip if AC == 0
    JMP Stop17  / Get here if AC != 0, then stop
    JMP Step18  / Get here if AC == 0, then continue
Stop17,
    JMP ERROR


/
/ Test plain ISZ with non zero result
/
Step18,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0023
    ISZ Inc             / Inc begins at 1234, so now 1235
    JMP Cont18          / Non-zero result
    JMP ERROR           / Zero result
Cont18,                 / Ok so far, compare Inc with 1235
    CLA
    TAD (1235)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step19   
    JMP ERROR


/*************************************************************************
/*************************************************************************
/*************************************************************************
*400

/
/ Test INDIRECT ISZ with non zero result
/
Step19,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0024
    ISZ I VInc           / Inc is 1235, so now 1236
    JMP Cont19           / Non-zero result
    JMP ERROR            / Zero result
Cont19,                  / Ok so far, compare Inc with 1236
    CLA
    TAD (1236)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step20
    JMP ERROR


/
/ Test AUTO-INDEX INDIRECT ISZ with non zero result
/
Step20,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0025
    ISZ I VAInc          / Inc is 1236, so now 1237
    JMP Cont20           / Non-zero result
    JMP ERROR            / Zero result
Cont20,                  / Ok so far, compare Inc with 1237
    CLA
    TAD (1237)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step21
    JMP ERROR


/
/ Test plain ISZ with zero result
/
Step21,
    ISZ Cnt    
    CLA; TAD Cnt; HLT    / Show AC=0026
    CLA; TAD (7777); DCA Inc    / Set Inc to 7777
    ISZ Inc             / Inc begins at 7777, so now 0000
    JMP ERROR           / Non-zero result
    JMP Cont21           / Zero result
    JMP ERROR
Cont21,                 / Ok so far, compare Inc with 0000
    CLA
    TAD (0000)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step22   
    JMP ERROR


/
/ Test INDIRECT ISZ with zero result
/
Step22,
    ISZ Cnt    
    CLA; TAD Cnt; HLT           / Show AC=0027
    CLA; TAD (7777); DCA Inc    / Set Inc to 7777
    ISZ I VInc                  / Inc begins at 7777, so now 0000
    JMP ERROR                   / Non-zero result
    JMP Cont22                  / Zero result
    JMP ERROR
Cont22,                         / Ok so far, compare Inc with 0000
    CLA
    TAD (0000)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step23   
    JMP ERROR


/
/ Test AUTO-INDEX INDIRECT ISZ with zero result
/
Step23,
    ISZ Cnt    
    CLA; TAD Cnt; HLT           / Show AC=0030
    CLA; TAD (7777); DCA Inc    / Set Inc to 7777
    ISZ I VInc                  / Inc begins at 7777, so now 0000
    JMP ERROR                   / Non-zero result
    JMP Cont23                  / Zero result
    JMP ERROR
Cont23,                         / Ok so far, compare Inc with 0000
    CLA
    TAD (0000)   
    CMA IAC		 
	TAD	Inc	     
    SNA          
    JMP Step24   
    JMP ERROR



/
/
/
Step24,
    JMP SUCCESS



$
